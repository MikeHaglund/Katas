// 11: destructuring - string
// To do: make all tests pass, leave the assert lines unchanged!
// Follow the hints of the failure messages!

// putting a, b, c into an array is defining 'abc'
describe('Destructuring also works on strings', () => {
  it('destructure every character, just as if the string was an array', () => {
    // let a, b, c = 'abc';
    let [a, b, c] = 'abc';
    assert.deepEqual([a, b, c], ['a', 'b', 'c']);
  });
  
//making the c = void 
  it('missing characters are undefined', () => {
    // const [a, c] = 'ab';
    const [a, c] = 'c';
    assert.equal(c, void 0);
  });
  
// line 22 is saying coffee = \u{2615}
  it('unicode character work too', () => {
    // const [space, coffee] = 'a ☕';
    const [a, coffee] = 'a☕';
    assert.equal(coffee, '\u{2615}');
  });
});

// testing variables to match the test
